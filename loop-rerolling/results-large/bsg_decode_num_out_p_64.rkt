#lang rosette
(require "../netlist_ir.rkt")
(require "../sketch_gen.rkt")

(def-netlist basejump-netlists/bsg_decode_num_out_p_64.blif
(hash 0 6)
(hash 1 64)
(hash)
(2 (ws (bv-const 1 64) (arange 0 63)))
(3 (wc (list 2 (bv-const 0 1))))
(4 (ws (bv-const 1 64) (arange 1 64)))
(5 (wc (list (bv-const 0 1) 4)))
(6 (wx (bv-const 1 1) 5 3))
(7 (wx (ws 0 (list 0)) (bv-const 1 64) 6))
(8 (ws (bv-const 0 2) (arange 0 2)))
(9 (wc (list (ws 7 (arange 0 62)) 8)))
(10 (wc (list 8 (ws 7 (arange 2 64)))))
(11 (wx (bv-const 1 1) 10 9))
(12 (wx (ws 0 (list 1)) 7 11))
(13 (wc (list 8 8)))
(14 (wc (list (ws 12 (arange 0 60)) (ws 13 (arange 0 4)))))
(15 (wc (list (ws 13 (arange 0 4)) (ws 12 (arange 4 64)))))
(16 (wx (bv-const 1 1) 15 14))
(17 (wx (ws 0 (list 2)) 12 16))
(18 (wc (list (ws 13 (arange 0 4)) (ws 13 (arange 0 4)))))
(19 (wc (list (ws 17 (arange 0 56)) (ws 18 (arange 0 8)))))
(20 (wc (list (ws 18 (arange 0 8)) (ws 17 (arange 8 64)))))
(21 (wx (bv-const 1 1) 20 19))
(22 (wx (ws 0 (list 3)) 17 21))
(23 (wc (list (ws 18 (arange 0 8)) (ws 18 (arange 0 8)))))
(24 (wc (list (ws 22 (arange 0 48)) (ws 23 (arange 0 16)))))
(25 (wc (list (ws 23 (arange 0 16)) (ws 22 (arange 16 64)))))
(26 (wx (bv-const 1 1) 25 24))
(27 (wx (ws 0 (list 4)) 22 26))
(28 (wc (list (ws 23 (arange 0 16)) (ws 23 (arange 0 16)))))
(29 (wc (list (ws 27 (arange 0 32)) (ws 28 (arange 0 32)))))
(30 (wc (list (ws 28 (arange 0 32)) (ws 27 (arange 32 64)))))
(31 (wx (bv-const 1 1) 30 29))
(32 (wx (ws 0 (list 5)) 27 31))
(1 (<<= 32)))

(define internal-signals (hash 2 63 3 64 4 63 5 64 6 64 7 64 8 2 9 64 10 64 11 64 12 64 13 4 14 64 15 64 16 64 17 64 18 8 19 64 20 64 21 64 22 64 23 16 24 64 25 64 26 64 27 64 28 32 29 64 30 64 31 64 32 64))

(sketch-reroll basejump-netlists/bsg_decode_num_out_p_64.blif (loops (18 1 3) (23 1 3) (18 3 3) (28 1 3)))

