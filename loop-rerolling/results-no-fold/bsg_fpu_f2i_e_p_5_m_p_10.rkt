#lang rosette
(require "../netlist_ir.rkt")
(require "../sketch_gen.rkt")

(def-netlist basejump-netlists/bsg_fpu_f2i_e_p_5_m_p_10.blif
(hash 0 1 1 16)
(hash 2 1 3 16)
(hash)
(4 (ws 1 (list 0)))
(5 (ws 1 (list 1)))
(6 (ws 1 (list 2)))
(7 (ws 1 (list 3)))
(8 (ws 1 (list 4)))
(9 (ws 1 (list 5)))
(10 (ws 1 (list 6)))
(11 (ws 1 (list 7)))
(12 (ws 1 (list 8)))
(13 (ws 1 (list 9)))
(14 (ws 1 (list 10)))
(15 (ws 1 (list 11)))
(16 (ws 1 (list 12)))
(17 (ws 1 (list 13)))
(18 (ws 1 (list 14)))
(19 (ws 1 (list 15)))
(20 (wc (list (bv-const 0 15) 19)))
(21 (w& 0 19))
(22 (wc (list 18 17 16 15 14)))
(23 (w> 22 (bv-const 29 5)))
(24 (wc (list 18 17 16 15 14)))
(25 (w> 24 (bv-const 30 5)))
(26 (wc (list 18 17 16 15 14)))
(27 (w< 26 (bv-const 15 5)))
(28 (w~ 0))
(29 (w& 28 19))
(30 (w~ 19))
(31 (w~ 29))
(32 (ws (bv-const 0 2) (arange 0 2)))
(33 (wc (list 32 32)))
(34 (ws 33 (arange 0 4)))
(35 (wc (list 34 34)))
(36 (ws 35 (arange 0 8)))
(37 (wc (list 36 36)))
(38 (ws 37 (arange 0 16)))
(39 (wc (list 18 17 16 15 14)))
(40 (w- (bv-const 29 5) 39))
(41 (ws 40 (arange 0 5)))
(42 (wc (list 18 17 16 15 14)))
(43 (w- (bv-const 30 5) 42))
(44 (ws 43 (arange 0 5)))
(45 (wx 0 25 23))
(46 (w~ 45))
(47 (wc (list 13 12 11 10 9 8 7 6 5 4 (bv-const 0 1))))
(48 (wc (list (bv-const 1 1) 13 12 11 10 9 8 7 6 5 4)))
(49 (wx 0 47 48))
(50 (ws 49 (list 0)))
(51 (ws 49 (list 1)))
(52 (ws 49 (list 2)))
(53 (ws 49 (list 3)))
(54 (ws 49 (list 4)))
(55 (ws 49 (list 5)))
(56 (ws 49 (list 6)))
(57 (ws 49 (list 7)))
(58 (ws 49 (list 8)))
(59 (ws 49 (list 9)))
(60 (ws 49 (list 10)))
(61 (wc (list 28 60 59 58 57 56 55 54 53 52 51 50 (bv-const 0 1) (bv-const 0 1) (bv-const 0 1) (bv-const 0 1))))
(62 (ws 61 (arange 0 15)))
(63 (wc (list 62 (bv-const 0 1))))
(64 (ws 61 (arange 1 16)))
(65 (wc (list (bv-const 0 1) 64)))
(66 (wx (bv-const 0 1) 65 63))
(67 (wx 0 44 41))
(68 (ws 67 (list 0)))
(69 (wx 68 61 66))
(70 (ws 69 (arange 0 14)))
(71 (wc (list 70 32)))
(72 (ws 69 (arange 2 16)))
(73 (wc (list 32 72)))
(74 (wx (bv-const 0 1) 73 71))
(75 (ws 67 (list 1)))
(76 (wx 75 69 74))
(77 (ws 76 (arange 0 12)))
(78 (wc (list 77 34)))
(79 (ws 76 (arange 4 16)))
(80 (wc (list 34 79)))
(81 (wx (bv-const 0 1) 80 78))
(82 (ws 67 (list 2)))
(83 (wx 82 76 81))
(84 (ws 83 (arange 0 8)))
(85 (wc (list 84 36)))
(86 (ws 83 (arange 8 16)))
(87 (wc (list 36 86)))
(88 (wx (bv-const 0 1) 87 85))
(89 (ws 67 (list 3)))
(90 (wx 89 83 88))
(91 (ws 67 (list 4)))
(92 (wx 91 90 38))
(93 (ws 92 (list 0)))
(94 (ws 92 (list 1)))
(95 (ws 92 (list 2)))
(96 (ws 92 (list 3)))
(97 (ws 92 (list 4)))
(98 (ws 92 (list 5)))
(99 (ws 92 (list 6)))
(100 (ws 92 (list 7)))
(101 (ws 92 (list 8)))
(102 (ws 92 (list 9)))
(103 (ws 92 (list 10)))
(104 (ws 92 (list 11)))
(105 (ws 92 (list 12)))
(106 (ws 92 (list 13)))
(107 (ws 92 (list 14)))
(108 (ws 92 (list 15)))
(109 (wx 19 28 0))
(110 (wc (list 19 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30)))
(111 (wc (list 109 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30)))
(112 (wc (list 28 (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1))))
(113 (w^ 21 108))
(114 (w^ 21 107))
(115 (w^ 21 106))
(116 (w^ 21 105))
(117 (w^ 21 104))
(118 (w^ 21 103))
(119 (w^ 21 102))
(120 (w^ 21 101))
(121 (w^ 21 100))
(122 (w^ 21 99))
(123 (w^ 21 98))
(124 (w^ 21 97))
(125 (w^ 21 96))
(126 (w^ 21 95))
(127 (w^ 21 94))
(128 (w^ 21 93))
(129 (wc (list 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128)))
(130 (w+ 129 20))
(131 (ws 130 (arange 0 16)))
(132 (w& 17 18))
(133 (w& 16 132))
(134 (w& 15 133))
(135 (w& 14 134))
(136 (w|| 17 18))
(137 (w|| 16 136))
(138 (w|| 15 137))
(139 (w|| 14 138))
(140 (w~ 139))
(141 (w|| 12 13))
(142 (w|| 11 141))
(143 (w|| 10 142))
(144 (w|| 9 143))
(145 (w|| 8 144))
(146 (w|| 7 145))
(147 (w|| 6 146))
(148 (w|| 5 147))
(149 (w|| 4 148))
(150 (w& 135 149))
(151 (w~ 150))
(152 (w~ 149))
(153 (w& 140 152))
(154 (w~ 153))
(155 (w& 135 152))
(156 (w& 155 151))
(157 (w~ 155))
(158 (w& 151 157))
(159 (w& 29 158))
(160 (w& 158 31))
(161 (w& 153 160))
(162 (w& 160 154))
(163 (w& 45 162))
(164 (wx 163 (bv-const 0 1) (bv-const 1 1)))
(165 (wx 161 164 (bv-const 0 1)))
(166 (wx 159 165 (bv-const 1 1)))
(167 (wx 156 166 (bv-const 1 1)))
(168 (wx 150 167 (bv-const 1 1)))
(169 (w& 162 46))
(170 (w& 27 169))
(171 (w|| 155 150))
(172 (w|| 29 171))
(173 (w|| 153 172))
(174 (w|| 45 173))
(175 (w|| 27 174))
(176 (wx 175 131 (bv-const 0 16)))
(177 (wx 170 176 (bv-const 0 16)))
(178 (wx 163 177 110))
(179 (wx 161 178 (bv-const 0 16)))
(180 (wx 159 179 (bv-const 0 16)))
(181 (wx 156 180 111))
(182 (wx 150 181 112))
(2 (<<= 168))
(3 (<<= 182)))

(define internal-signals (hash 4 1 5 1 6 1 7 1 8 1 9 1 10 1 11 1 12 1 13 1 14 1 15 1 16 1 17 1 18 1 19 1 20 16 21 1 22 5 23 1 24 5 25 1 26 5 27 1 28 1 29 1 30 1 31 1 32 2 33 4 34 4 35 8 36 8 37 16 38 16 39 5 40 6 41 5 42 5 43 6 44 5 45 1 46 1 47 11 48 11 49 11 50 1 51 1 52 1 53 1 54 1 55 1 56 1 57 1 58 1 59 1 60 1 61 16 62 15 63 16 64 15 65 16 66 16 67 5 68 1 69 16 70 14 71 16 72 14 73 16 74 16 75 1 76 16 77 12 78 16 79 12 80 16 81 16 82 1 83 16 84 8 85 16 86 8 87 16 88 16 89 1 90 16 91 1 92 16 93 1 94 1 95 1 96 1 97 1 98 1 99 1 100 1 101 1 102 1 103 1 104 1 105 1 106 1 107 1 108 1 109 1 110 16 111 16 112 16 113 1 114 1 115 1 116 1 117 1 118 1 119 1 120 1 121 1 122 1 123 1 124 1 125 1 126 1 127 1 128 1 129 16 130 17 131 16 132 1 133 1 134 1 135 1 136 1 137 1 138 1 139 1 140 1 141 1 142 1 143 1 144 1 145 1 146 1 147 1 148 1 149 1 150 1 151 1 152 1 153 1 154 1 155 1 156 1 157 1 158 1 159 1 160 1 161 1 162 1 163 1 164 1 165 1 166 1 167 1 168 1 169 1 170 1 171 1 172 1 173 1 174 1 175 1 176 16 177 16 178 16 179 16 180 16 181 16 182 16))

(sketch-reroll basejump-netlists/bsg_fpu_f2i_e_p_5_m_p_10.blif (loops (4 1 16) (34 2 3) (50 1 11) (70 7 3) (93 1 16) (113 1 16) (132 1 4) (136 1 4) (141 1 9) (158 1 6) (165 1 4) (171 1 5)))

