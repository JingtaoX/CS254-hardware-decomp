#lang rosette
(require "../netlist_ir.rkt")
(require "../sketch_gen.rkt")

(def-netlist basejump-netlists/bsg_fpu_f2i_e_p_8_m_p_23.blif
(hash 0 1 1 32)
(hash 2 32 3 1)
(hash)
(4 (wc (list (bv-const 0 31) (ws 1 (list 31)))))
(5 (w& 0 (ws 1 (list 31))))
(6 (wc (list (ws 1 (list 30)) (ws 1 (list 29)) (ws 1 (list 28)) (ws 1 (list 27)) (ws 1 (list 26)) (ws 1 (list 25)) (ws 1 (list 24)) (ws 1 (list 23)))))
(7 (w> 6 (bv-const 157 8)))
(8 (wc (list (ws 1 (list 30)) (ws 1 (list 29)) (ws 1 (list 28)) (ws 1 (list 27)) (ws 1 (list 26)) (ws 1 (list 25)) (ws 1 (list 24)) (ws 1 (list 23)))))
(9 (w> 8 (bv-const 158 8)))
(10 (wc (list (ws 1 (list 30)) (ws 1 (list 29)) (ws 1 (list 28)) (ws 1 (list 27)) (ws 1 (list 26)) (ws 1 (list 25)) (ws 1 (list 24)) (ws 1 (list 23)))))
(11 (w< 10 (bv-const 127 8)))
(12 (w~ 0))
(13 (w& 12 (ws 1 (list 31))))
(14 (w~ (ws 1 (list 31))))
(15 (w~ 13))
(16 (ws (bv-const 0 2) (arange 0 2)))
(17 (wc (list 16 16)))
(18 (wc (list (ws 17 (arange 0 4)) (ws 17 (arange 0 4)))))
(19 (wc (list (ws 18 (arange 0 8)) (ws 18 (arange 0 8)))))
(20 (wc (list (ws 19 (arange 0 16)) (ws 19 (arange 0 16)))))
(21 (wc (list (ws 1 (list 28)) (ws 1 (list 27)) (ws 1 (list 26)) (ws 1 (list 25)) (ws 1 (list 24)) (ws 1 (list 23)))))
(22 (w- (bv-const 29 6) 21))
(23 (wc (list (ws 1 (list 28)) (ws 1 (list 27)) (ws 1 (list 26)) (ws 1 (list 25)) (ws 1 (list 24)) (ws 1 (list 23)))))
(24 (w- (bv-const 30 6) 23))
(25 (wx 0 9 7))
(26 (w~ 25))
(27 (wc (list (ws 1 (list 22)) (ws 1 (list 21)) (ws 1 (list 20)) (ws 1 (list 19)) (ws 1 (list 18)) (ws 1 (list 17)) (ws 1 (list 16)) (ws 1 (list 15)) (ws 1 (list 14)) (ws 1 (list 13)) (ws 1 (list 12)) (ws 1 (list 11)) (ws 1 (list 10)) (ws 1 (list 9)) (ws 1 (list 8)) (ws 1 (list 7)) (ws 1 (list 6)) (ws 1 (list 5)) (ws 1 (list 4)) (ws 1 (list 3)) (ws 1 (list 2)) (ws 1 (list 1)) (ws 1 (list 0)) (bv-const 0 1))))
(28 (wc (list (bv-const 1 1) (ws 1 (list 22)) (ws 1 (list 21)) (ws 1 (list 20)) (ws 1 (list 19)) (ws 1 (list 18)) (ws 1 (list 17)) (ws 1 (list 16)) (ws 1 (list 15)) (ws 1 (list 14)) (ws 1 (list 13)) (ws 1 (list 12)) (ws 1 (list 11)) (ws 1 (list 10)) (ws 1 (list 9)) (ws 1 (list 8)) (ws 1 (list 7)) (ws 1 (list 6)) (ws 1 (list 5)) (ws 1 (list 4)) (ws 1 (list 3)) (ws 1 (list 2)) (ws 1 (list 1)) (ws 1 (list 0)))))
(29 (wx 0 27 28))
(30 (wc (list 12 (ws 29 (list 23)) (ws 29 (list 22)) (ws 29 (list 21)) (ws 29 (list 20)) (ws 29 (list 19)) (ws 29 (list 18)) (ws 29 (list 17)) (ws 29 (list 16)) (ws 29 (list 15)) (ws 29 (list 14)) (ws 29 (list 13)) (ws 29 (list 12)) (ws 29 (list 11)) (ws 29 (list 10)) (ws 29 (list 9)) (ws 29 (list 8)) (ws 29 (list 7)) (ws 29 (list 6)) (ws 29 (list 5)) (ws 29 (list 4)) (ws 29 (list 3)) (ws 29 (list 2)) (ws 29 (list 1)) (ws 29 (list 0)) (bv-const 0 1) (bv-const 0 1) (bv-const 0 1) (bv-const 0 1) (bv-const 0 1) (bv-const 0 1) (bv-const 0 1))))
(31 (wc (list (ws 30 (arange 0 31)) (bv-const 0 1))))
(32 (wc (list (bv-const 0 1) (ws 30 (arange 1 32)))))
(33 (wx (bv-const 0 1) 32 31))
(34 (wx 0 (ws 24 (arange 0 6)) (ws 22 (arange 0 6))))
(35 (wx (ws 34 (list 0)) 30 33))
(36 (wc (list 16 (ws 35 (arange 2 32)))))
(37 (wc (list (ws 35 (arange 0 30)) 16)))
(38 (wx (bv-const 0 1) 36 37))
(39 (wx (ws 34 (list 1)) 35 38))
(40 (wc (list (ws 39 (arange 0 28)) (ws 17 (arange 0 4)))))
(41 (wc (list (ws 17 (arange 0 4)) (ws 39 (arange 4 32)))))
(42 (wx (bv-const 0 1) 41 40))
(43 (wx (ws 34 (list 2)) 39 42))
(44 (wc (list (ws 43 (arange 0 24)) (ws 18 (arange 0 8)))))
(45 (wc (list (ws 18 (arange 0 8)) (ws 43 (arange 8 32)))))
(46 (wx (bv-const 0 1) 45 44))
(47 (wx (ws 34 (list 3)) 43 46))
(48 (wc (list (ws 47 (arange 0 16)) (ws 19 (arange 0 16)))))
(49 (wc (list (ws 19 (arange 0 16)) (ws 47 (arange 16 32)))))
(50 (wx (bv-const 0 1) 49 48))
(51 (wx (ws 34 (list 4)) 47 50))
(52 (wx (ws 34 (list 5)) 51 (ws 20 (arange 0 32))))
(53 (wx (ws 1 (list 31)) 12 0))
(54 (wc (list (ws 1 (list 31)) 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14)))
(55 (wc (list 53 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14)))
(56 (wc (list 12 (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1))))
(57 (w^ 5 (ws 52 (list 31))))
(58 (w^ 5 (ws 52 (list 30))))
(59 (w^ 5 (ws 52 (list 29))))
(60 (w^ 5 (ws 52 (list 28))))
(61 (w^ 5 (ws 52 (list 27))))
(62 (w^ 5 (ws 52 (list 26))))
(63 (w^ 5 (ws 52 (list 25))))
(64 (w^ 5 (ws 52 (list 24))))
(65 (w^ 5 (ws 52 (list 23))))
(66 (w^ 5 (ws 52 (list 22))))
(67 (w^ 5 (ws 52 (list 21))))
(68 (w^ 5 (ws 52 (list 20))))
(69 (w^ 5 (ws 52 (list 19))))
(70 (w^ 5 (ws 52 (list 18))))
(71 (w^ 5 (ws 52 (list 17))))
(72 (w^ 5 (ws 52 (list 16))))
(73 (w^ 5 (ws 52 (list 15))))
(74 (w^ 5 (ws 52 (list 14))))
(75 (w^ 5 (ws 52 (list 13))))
(76 (w^ 5 (ws 52 (list 12))))
(77 (w^ 5 (ws 52 (list 11))))
(78 (w^ 5 (ws 52 (list 10))))
(79 (w^ 5 (ws 52 (list 9))))
(80 (w^ 5 (ws 52 (list 8))))
(81 (w^ 5 (ws 52 (list 7))))
(82 (w^ 5 (ws 52 (list 6))))
(83 (w^ 5 (ws 52 (list 5))))
(84 (w^ 5 (ws 52 (list 4))))
(85 (w^ 5 (ws 52 (list 3))))
(86 (w^ 5 (ws 52 (list 2))))
(87 (w^ 5 (ws 52 (list 1))))
(88 (w^ 5 (ws 52 (list 0))))
(89 (wc (list 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88)))
(90 (w+ 89 4))
(91 (w& (ws 1 (list 29)) (ws 1 (list 30))))
(92 (w& (ws 1 (list 28)) 91))
(93 (w& (ws 1 (list 27)) 92))
(94 (w& (ws 1 (list 26)) 93))
(95 (w& (ws 1 (list 25)) 94))
(96 (w& (ws 1 (list 24)) 95))
(97 (w& (ws 1 (list 23)) 96))
(98 (w|| (ws 1 (list 21)) (ws 1 (list 22))))
(99 (w|| (ws 1 (list 20)) 98))
(100 (w|| (ws 1 (list 19)) 99))
(101 (w|| (ws 1 (list 18)) 100))
(102 (w|| (ws 1 (list 17)) 101))
(103 (w|| (ws 1 (list 16)) 102))
(104 (w|| (ws 1 (list 15)) 103))
(105 (w|| (ws 1 (list 14)) 104))
(106 (w|| (ws 1 (list 13)) 105))
(107 (w|| (ws 1 (list 12)) 106))
(108 (w|| (ws 1 (list 11)) 107))
(109 (w|| (ws 1 (list 10)) 108))
(110 (w|| (ws 1 (list 9)) 109))
(111 (w|| (ws 1 (list 8)) 110))
(112 (w|| (ws 1 (list 7)) 111))
(113 (w|| (ws 1 (list 6)) 112))
(114 (w|| (ws 1 (list 5)) 113))
(115 (w|| (ws 1 (list 4)) 114))
(116 (w|| (ws 1 (list 3)) 115))
(117 (w|| (ws 1 (list 2)) 116))
(118 (w|| (ws 1 (list 1)) 117))
(119 (w|| (ws 1 (list 0)) 118))
(120 (w& 97 119))
(121 (w~ 120))
(122 (w~ 119))
(123 (w& 97 122))
(124 (w& 123 121))
(125 (w~ 123))
(126 (w& 121 125))
(127 (w& 13 126))
(128 (w& 126 15))
(129 (w|| 123 120))
(130 (w|| 13 129))
(131 (w|| (ws 1 (list 29)) (ws 1 (list 30))))
(132 (w|| (ws 1 (list 28)) 131))
(133 (w|| (ws 1 (list 27)) 132))
(134 (w|| (ws 1 (list 26)) 133))
(135 (w|| (ws 1 (list 25)) 134))
(136 (w|| (ws 1 (list 24)) 135))
(137 (w|| (ws 1 (list 23)) 136))
(138 (w~ 137))
(139 (w& 138 122))
(140 (w& 139 128))
(141 (w~ 139))
(142 (w& 128 141))
(143 (w& 25 142))
(144 (wx 143 (bv-const 0 1) (bv-const 1 1)))
(145 (wx 140 144 (bv-const 0 1)))
(146 (wx 127 145 (bv-const 1 1)))
(147 (wx 124 146 (bv-const 1 1)))
(148 (wx 120 147 (bv-const 1 1)))
(149 (w& 142 26))
(150 (w& 11 149))
(151 (w|| 139 130))
(152 (w|| 25 151))
(153 (w|| 11 152))
(154 (wx 153 (ws 90 (arange 0 32)) (bv-const 0 32)))
(155 (wx 150 154 (bv-const 0 32)))
(156 (wx 143 155 54))
(157 (wx 140 156 (bv-const 0 32)))
(158 (wx 127 157 (bv-const 0 32)))
(159 (wx 124 158 55))
(160 (wx 120 159 56))
(2 (<<= 160))
(3 (<<= 148)))

(define internal-signals (hash 4 32 5 1 6 8 7 1 8 8 9 1 10 8 11 1 12 1 13 1 14 1 15 1 16 2 17 4 18 8 19 16 20 32 21 6 22 7 23 6 24 7 25 1 26 1 27 24 28 24 29 24 30 32 31 32 32 32 33 32 34 6 35 32 36 32 37 32 38 32 39 32 40 32 41 32 42 32 43 32 44 32 45 32 46 32 47 32 48 32 49 32 50 32 51 32 52 32 53 1 54 32 55 32 56 32 57 1 58 1 59 1 60 1 61 1 62 1 63 1 64 1 65 1 66 1 67 1 68 1 69 1 70 1 71 1 72 1 73 1 74 1 75 1 76 1 77 1 78 1 79 1 80 1 81 1 82 1 83 1 84 1 85 1 86 1 87 1 88 1 89 32 90 33 91 1 92 1 93 1 94 1 95 1 96 1 97 1 98 1 99 1 100 1 101 1 102 1 103 1 104 1 105 1 106 1 107 1 108 1 109 1 110 1 111 1 112 1 113 1 114 1 115 1 116 1 117 1 118 1 119 1 120 1 121 1 122 1 123 1 124 1 125 1 126 1 127 1 128 1 129 1 130 1 131 1 132 1 133 1 134 1 135 1 136 1 137 1 138 1 139 1 140 1 141 1 142 1 143 1 144 1 145 1 146 1 147 1 148 1 149 1 150 1 151 1 152 1 153 1 154 32 155 32 156 32 157 32 158 32 159 32 160 32))

(sketch-reroll basejump-netlists/bsg_fpu_f2i_e_p_8_m_p_23.blif (loops (18 1 3) (40 4 3) (57 1 32) (92 1 6) (99 1 21) (126 1 3) (132 1 6) (145 1 4) (151 1 3)))

