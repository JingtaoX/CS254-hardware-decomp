#lang rosette
(require "../netlist_ir.rkt")
(require "../sketch_gen.rkt")

(def-netlist basejump-netlists/bsg_fpu_f2i_e_p_5_m_p_10.blif
(hash 0 16 1 1)
(hash 2 1 3 16)
(hash)
(4 (wc (list (bv-const 0 15) (ws 0 (list 15)))))
(5 (w& 1 (ws 0 (list 15))))
(6 (wc (list (ws 0 (list 14)) (ws 0 (list 13)) (ws 0 (list 12)) (ws 0 (list 11)) (ws 0 (list 10)))))
(7 (w> 6 (bv-const 29 5)))
(8 (wc (list (ws 0 (list 14)) (ws 0 (list 13)) (ws 0 (list 12)) (ws 0 (list 11)) (ws 0 (list 10)))))
(9 (w> 8 (bv-const 30 5)))
(10 (wc (list (ws 0 (list 14)) (ws 0 (list 13)) (ws 0 (list 12)) (ws 0 (list 11)) (ws 0 (list 10)))))
(11 (w< 10 (bv-const 15 5)))
(12 (w~ 1))
(13 (w& 12 (ws 0 (list 15))))
(14 (w~ (ws 0 (list 15))))
(15 (w~ 13))
(16 (ws (bv-const 0 2) (arange 0 2)))
(17 (wc (list 16 16)))
(18 (wc (list (ws 17 (arange 0 4)) (ws 17 (arange 0 4)))))
(19 (wc (list (ws 18 (arange 0 8)) (ws 18 (arange 0 8)))))
(20 (wc (list (ws 0 (list 14)) (ws 0 (list 13)) (ws 0 (list 12)) (ws 0 (list 11)) (ws 0 (list 10)))))
(21 (w- (bv-const 29 5) 20))
(22 (wc (list (ws 0 (list 14)) (ws 0 (list 13)) (ws 0 (list 12)) (ws 0 (list 11)) (ws 0 (list 10)))))
(23 (w- (bv-const 30 5) 22))
(24 (wx 1 9 7))
(25 (w~ 24))
(26 (wc (list (ws 0 (list 9)) (ws 0 (list 8)) (ws 0 (list 7)) (ws 0 (list 6)) (ws 0 (list 5)) (ws 0 (list 4)) (ws 0 (list 3)) (ws 0 (list 2)) (ws 0 (list 1)) (ws 0 (list 0)) (bv-const 0 1))))
(27 (wc (list (bv-const 1 1) (ws 0 (list 9)) (ws 0 (list 8)) (ws 0 (list 7)) (ws 0 (list 6)) (ws 0 (list 5)) (ws 0 (list 4)) (ws 0 (list 3)) (ws 0 (list 2)) (ws 0 (list 1)) (ws 0 (list 0)))))
(28 (wx 1 26 27))
(29 (wc (list 12 (ws 28 (list 10)) (ws 28 (list 9)) (ws 28 (list 8)) (ws 28 (list 7)) (ws 28 (list 6)) (ws 28 (list 5)) (ws 28 (list 4)) (ws 28 (list 3)) (ws 28 (list 2)) (ws 28 (list 1)) (ws 28 (list 0)) (bv-const 0 1) (bv-const 0 1) (bv-const 0 1) (bv-const 0 1))))
(30 (wc (list (ws 29 (arange 0 15)) (bv-const 0 1))))
(31 (wc (list (bv-const 0 1) (ws 29 (arange 1 16)))))
(32 (wx (bv-const 0 1) 31 30))
(33 (wx 1 (ws 23 (arange 0 5)) (ws 21 (arange 0 5))))
(34 (wx (ws 33 (list 0)) 29 32))
(35 (wc (list (ws 34 (arange 0 14)) 16)))
(36 (wc (list 16 (ws 34 (arange 2 16)))))
(37 (wx (bv-const 0 1) 36 35))
(38 (wx (ws 33 (list 1)) 34 37))
(39 (wc (list (ws 38 (arange 0 12)) (ws 17 (arange 0 4)))))
(40 (wc (list (ws 17 (arange 0 4)) (ws 38 (arange 4 16)))))
(41 (wx (bv-const 0 1) 40 39))
(42 (wx (ws 33 (list 2)) 38 41))
(43 (wc (list (ws 42 (arange 0 8)) (ws 18 (arange 0 8)))))
(44 (wc (list (ws 18 (arange 0 8)) (ws 42 (arange 8 16)))))
(45 (wx (bv-const 0 1) 44 43))
(46 (wx (ws 33 (list 3)) 42 45))
(47 (wx (ws 33 (list 4)) 46 (ws 19 (arange 0 16))))
(48 (wx (ws 0 (list 15)) 12 1))
(49 (wc (list (ws 0 (list 15)) 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14)))
(50 (wc (list 48 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14)))
(51 (wc (list 12 (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1) (bv-const 1 1))))
(52 (w^ 5 (ws 47 (list 15))))
(53 (w^ 5 (ws 47 (list 14))))
(54 (w^ 5 (ws 47 (list 13))))
(55 (w^ 5 (ws 47 (list 12))))
(56 (w^ 5 (ws 47 (list 11))))
(57 (w^ 5 (ws 47 (list 10))))
(58 (w^ 5 (ws 47 (list 9))))
(59 (w^ 5 (ws 47 (list 8))))
(60 (w^ 5 (ws 47 (list 7))))
(61 (w^ 5 (ws 47 (list 6))))
(62 (w^ 5 (ws 47 (list 5))))
(63 (w^ 5 (ws 47 (list 4))))
(64 (w^ 5 (ws 47 (list 3))))
(65 (w^ 5 (ws 47 (list 2))))
(66 (w^ 5 (ws 47 (list 1))))
(67 (w^ 5 (ws 47 (list 0))))
(68 (wc (list 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67)))
(69 (w+ 68 4))
(70 (w& (ws 0 (list 13)) (ws 0 (list 14))))
(71 (w& (ws 0 (list 12)) 70))
(72 (w& (ws 0 (list 11)) 71))
(73 (w& (ws 0 (list 10)) 72))
(74 (w|| (ws 0 (list 13)) (ws 0 (list 14))))
(75 (w|| (ws 0 (list 12)) 74))
(76 (w|| (ws 0 (list 11)) 75))
(77 (w|| (ws 0 (list 10)) 76))
(78 (w~ 77))
(79 (w|| (ws 0 (list 8)) (ws 0 (list 9))))
(80 (w|| (ws 0 (list 7)) 79))
(81 (w|| (ws 0 (list 6)) 80))
(82 (w|| (ws 0 (list 5)) 81))
(83 (w|| (ws 0 (list 4)) 82))
(84 (w|| (ws 0 (list 3)) 83))
(85 (w|| (ws 0 (list 2)) 84))
(86 (w|| (ws 0 (list 1)) 85))
(87 (w|| (ws 0 (list 0)) 86))
(88 (w& 73 87))
(89 (w~ 88))
(90 (w~ 87))
(91 (w& 78 90))
(92 (w~ 91))
(93 (w& 73 90))
(94 (w& 93 89))
(95 (w~ 93))
(96 (w& 89 95))
(97 (w& 13 96))
(98 (w& 96 15))
(99 (w& 91 98))
(100 (w& 98 92))
(101 (w& 24 100))
(102 (wx 101 (bv-const 0 1) (bv-const 1 1)))
(103 (wx 99 102 (bv-const 0 1)))
(104 (wx 97 103 (bv-const 1 1)))
(105 (wx 94 104 (bv-const 1 1)))
(106 (wx 88 105 (bv-const 1 1)))
(107 (w& 100 25))
(108 (w& 11 107))
(109 (w|| 93 88))
(110 (w|| 13 109))
(111 (w|| 91 110))
(112 (w|| 24 111))
(113 (w|| 11 112))
(114 (wx 113 (ws 69 (arange 0 16)) (bv-const 0 16)))
(115 (wx 108 114 (bv-const 0 16)))
(116 (wx 101 115 49))
(117 (wx 99 116 (bv-const 0 16)))
(118 (wx 97 117 (bv-const 0 16)))
(119 (wx 94 118 50))
(120 (wx 88 119 51))
(2 (<<= 106))
(3 (<<= 120)))

(define internal-signals (hash 4 16 5 1 6 5 7 1 8 5 9 1 10 5 11 1 12 1 13 1 14 1 15 1 16 2 17 4 18 8 19 16 20 5 21 6 22 5 23 6 24 1 25 1 26 11 27 11 28 11 29 16 30 16 31 16 32 16 33 5 34 16 35 16 36 16 37 16 38 16 39 16 40 16 41 16 42 16 43 16 44 16 45 16 46 16 47 16 48 1 49 16 50 16 51 16 52 1 53 1 54 1 55 1 56 1 57 1 58 1 59 1 60 1 61 1 62 1 63 1 64 1 65 1 66 1 67 1 68 16 69 17 70 1 71 1 72 1 73 1 74 1 75 1 76 1 77 1 78 1 79 1 80 1 81 1 82 1 83 1 84 1 85 1 86 1 87 1 88 1 89 1 90 1 91 1 92 1 93 1 94 1 95 1 96 1 97 1 98 1 99 1 100 1 101 1 102 1 103 1 104 1 105 1 106 1 107 1 108 1 109 1 110 1 111 1 112 1 113 1 114 16 115 16 116 16 117 16 118 16 119 16 120 16))

(sketch-reroll basejump-netlists/bsg_fpu_f2i_e_p_5_m_p_10.blif (loops (52 1 16) (71 1 3) (75 1 3) (80 1 8) (96 1 6) (103 1 4) (109 1 5)))

