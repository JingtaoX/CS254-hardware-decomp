#lang rosette
(require "../netlist_ir.rkt")
(require "../sketch_gen.rkt")

(def-netlist basejump-netlists/bsg_1_to_n_tagged_num_out_p_32.blif
(hash 0 32 1 1 2 5 3 1)
(hash 4 32 5 1)
(hash)
(6 (w& (ws 2 (list 0)) (ws 2 (list 1))))
(7 (w& 6 (ws 2 (list 2))))
(8 (w& 7 (ws 2 (list 3))))
(9 (w& 8 (ws 2 (list 4))))
(10 (w~ (ws 2 (list 0))))
(11 (w& 10 (ws 2 (list 1))))
(12 (w& 11 (ws 2 (list 2))))
(13 (w& 12 (ws 2 (list 3))))
(14 (w& 13 (ws 2 (list 4))))
(15 (w~ (ws 2 (list 1))))
(16 (w& 10 15))
(17 (w& 16 (ws 2 (list 2))))
(18 (w& 17 (ws 2 (list 3))))
(19 (w& 18 (ws 2 (list 4))))
(20 (w& (ws 2 (list 0)) 15))
(21 (w& 20 (ws 2 (list 2))))
(22 (w& 21 (ws 2 (list 3))))
(23 (w& 22 (ws 2 (list 4))))
(24 (w~ (ws 2 (list 2))))
(25 (w& 16 24))
(26 (w& 25 (ws 2 (list 3))))
(27 (w& 26 (ws 2 (list 4))))
(28 (w& 20 24))
(29 (w& 28 (ws 2 (list 3))))
(30 (w& 29 (ws 2 (list 4))))
(31 (w& 11 24))
(32 (w& 31 (ws 2 (list 3))))
(33 (w& 32 (ws 2 (list 4))))
(34 (w& 6 24))
(35 (w& 34 (ws 2 (list 3))))
(36 (w& 35 (ws 2 (list 4))))
(37 (w~ (ws 2 (list 3))))
(38 (w& 25 37))
(39 (w& 38 (ws 2 (list 4))))
(40 (w& 17 37))
(41 (w& 40 (ws 2 (list 4))))
(42 (w& 28 37))
(43 (w& 42 (ws 2 (list 4))))
(44 (w& 31 37))
(45 (w& 44 (ws 2 (list 4))))
(46 (w& 34 37))
(47 (w& 46 (ws 2 (list 4))))
(48 (w& 21 37))
(49 (w& 48 (ws 2 (list 4))))
(50 (w& 12 37))
(51 (w& 50 (ws 2 (list 4))))
(52 (w& 7 37))
(53 (w& 52 (ws 2 (list 4))))
(54 (w~ (ws 2 (list 4))))
(55 (w& 18 54))
(56 (w& 26 54))
(57 (w& 29 54))
(58 (w& 32 54))
(59 (w& 35 54))
(60 (w& 38 54))
(61 (w& 40 54))
(62 (w& 42 54))
(63 (w& 44 54))
(64 (w& 46 54))
(65 (w& 48 54))
(66 (w& 50 54))
(67 (w& 52 54))
(68 (w& 22 54))
(69 (w& 13 54))
(70 (w& 8 54))
(71 (wx 9 (bv-const 0 1) (ws 0 (list 31))))
(72 (wx 14 71 (ws 0 (list 30))))
(73 (wx 23 72 (ws 0 (list 29))))
(74 (wx 19 73 (ws 0 (list 28))))
(75 (wx 36 74 (ws 0 (list 27))))
(76 (wx 33 75 (ws 0 (list 26))))
(77 (wx 30 76 (ws 0 (list 25))))
(78 (wx 27 77 (ws 0 (list 24))))
(79 (wx 53 78 (ws 0 (list 23))))
(80 (wx 51 79 (ws 0 (list 22))))
(81 (wx 49 80 (ws 0 (list 21))))
(82 (wx 41 81 (ws 0 (list 20))))
(83 (wx 47 82 (ws 0 (list 19))))
(84 (wx 45 83 (ws 0 (list 18))))
(85 (wx 43 84 (ws 0 (list 17))))
(86 (wx 39 85 (ws 0 (list 16))))
(87 (wx 70 86 (ws 0 (list 15))))
(88 (wx 69 87 (ws 0 (list 14))))
(89 (wx 68 88 (ws 0 (list 13))))
(90 (wx 55 89 (ws 0 (list 12))))
(91 (wx 59 90 (ws 0 (list 11))))
(92 (wx 58 91 (ws 0 (list 10))))
(93 (wx 57 92 (ws 0 (list 9))))
(94 (wx 56 93 (ws 0 (list 8))))
(95 (wx 67 94 (ws 0 (list 7))))
(96 (wx 66 95 (ws 0 (list 6))))
(97 (wx 65 96 (ws 0 (list 5))))
(98 (wx 61 97 (ws 0 (list 4))))
(99 (wx 64 98 (ws 0 (list 3))))
(100 (wx 63 99 (ws 0 (list 2))))
(101 (wx 62 100 (ws 0 (list 1))))
(102 (wx 60 101 (ws 0 (list 0))))
(103 (w& 102 1))
(104 (ws (bv-const 1 32) (arange 0 31)))
(105 (wc (list 104 (bv-const 0 1))))
(106 (ws (bv-const 1 32) (arange 1 32)))
(107 (wc (list (bv-const 0 1) 106)))
(108 (wx (bv-const 1 1) 107 105))
(109 (wx (ws 2 (list 0)) (bv-const 1 32) 108))
(110 (ws (bv-const 0 2) (arange 0 2)))
(111 (wc (list (ws 109 (arange 0 30)) 110)))
(112 (wc (list 110 (ws 109 (arange 2 32)))))
(113 (wx (bv-const 1 1) 112 111))
(114 (wx (ws 2 (list 1)) 109 113))
(115 (wc (list 110 110)))
(116 (wc (list (ws 114 (arange 0 28)) (ws 115 (arange 0 4)))))
(117 (wc (list (ws 115 (arange 0 4)) (ws 114 (arange 4 32)))))
(118 (wx (bv-const 1 1) 117 116))
(119 (wx (ws 2 (list 2)) 114 118))
(120 (wc (list (ws 115 (arange 0 4)) (ws 115 (arange 0 4)))))
(121 (wc (list (ws 119 (arange 0 24)) (ws 120 (arange 0 8)))))
(122 (wc (list (ws 120 (arange 0 8)) (ws 119 (arange 8 32)))))
(123 (wx (bv-const 1 1) 122 121))
(124 (wx (ws 2 (list 3)) 119 123))
(125 (wc (list (ws 120 (arange 0 8)) (ws 120 (arange 0 8)))))
(126 (wc (list (ws 124 (arange 0 16)) (ws 125 (arange 0 16)))))
(127 (wc (list (ws 125 (arange 0 16)) (ws 124 (arange 16 32)))))
(128 (wx (bv-const 1 1) 127 126))
(129 (wx (ws 2 (list 4)) 124 128))
(130 (w& 1 (ws 129 (list 0))))
(131 (w& 1 (ws 129 (list 1))))
(132 (w& 1 (ws 129 (list 2))))
(133 (w& 1 (ws 129 (list 3))))
(134 (w& 1 (ws 129 (list 4))))
(135 (w& 1 (ws 129 (list 5))))
(136 (w& 1 (ws 129 (list 6))))
(137 (w& 1 (ws 129 (list 7))))
(138 (w& 1 (ws 129 (list 8))))
(139 (w& 1 (ws 129 (list 9))))
(140 (w& 1 (ws 129 (list 10))))
(141 (w& 1 (ws 129 (list 11))))
(142 (w& 1 (ws 129 (list 12))))
(143 (w& 1 (ws 129 (list 13))))
(144 (w& 1 (ws 129 (list 14))))
(145 (w& 1 (ws 129 (list 15))))
(146 (w& 1 (ws 129 (list 16))))
(147 (w& 1 (ws 129 (list 17))))
(148 (w& 1 (ws 129 (list 18))))
(149 (w& 1 (ws 129 (list 19))))
(150 (w& 1 (ws 129 (list 20))))
(151 (w& 1 (ws 129 (list 21))))
(152 (w& 1 (ws 129 (list 22))))
(153 (w& 1 (ws 129 (list 23))))
(154 (w& 1 (ws 129 (list 24))))
(155 (w& 1 (ws 129 (list 25))))
(156 (w& 1 (ws 129 (list 26))))
(157 (w& 1 (ws 129 (list 27))))
(158 (w& 1 (ws 129 (list 28))))
(159 (w& 1 (ws 129 (list 29))))
(160 (w& 1 (ws 129 (list 30))))
(161 (w& 1 (ws 129 (list 31))))
(162 (wc (list 161 160 159 158 157 156 155 154 153 152 151 150 149 148 147 146 145 144 143 142 141 140 139 138 137 136 135 134 133 132 131 130)))
(4 (<<= 162))
(5 (<<= 103)))

(define internal-signals (hash 6 1 7 1 8 1 9 1 10 1 11 1 12 1 13 1 14 1 15 1 16 1 17 1 18 1 19 1 20 1 21 1 22 1 23 1 24 1 25 1 26 1 27 1 28 1 29 1 30 1 31 1 32 1 33 1 34 1 35 1 36 1 37 1 38 1 39 1 40 1 41 1 42 1 43 1 44 1 45 1 46 1 47 1 48 1 49 1 50 1 51 1 52 1 53 1 54 1 55 1 56 1 57 1 58 1 59 1 60 1 61 1 62 1 63 1 64 1 65 1 66 1 67 1 68 1 69 1 70 1 71 1 72 1 73 1 74 1 75 1 76 1 77 1 78 1 79 1 80 1 81 1 82 1 83 1 84 1 85 1 86 1 87 1 88 1 89 1 90 1 91 1 92 1 93 1 94 1 95 1 96 1 97 1 98 1 99 1 100 1 101 1 102 1 103 1 104 31 105 32 106 31 107 32 108 32 109 32 110 2 111 32 112 32 113 32 114 32 115 4 116 32 117 32 118 32 119 32 120 8 121 32 122 32 123 32 124 32 125 16 126 32 127 32 128 32 129 32 130 1 131 1 132 1 133 1 134 1 135 1 136 1 137 1 138 1 139 1 140 1 141 1 142 1 143 1 144 1 145 1 146 1 147 1 148 1 149 1 150 1 151 1 152 1 153 1 154 1 155 1 156 1 157 1 158 1 159 1 160 1 161 1 162 32))

(sketch-reroll basejump-netlists/bsg_1_to_n_tagged_num_out_p_32.blif (loops (7 1 3) (11 1 4) (17 1 7) (25 3 4) (38 2 8) (55 1 16) (72 1 31) (120 1 3) (125 1 3) (130 1 32)))

